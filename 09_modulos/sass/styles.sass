@use 'sass:color'
@use 'sass:list'
@use 'sass:map'
@use 'sass:math'
@use 'sass:meta'
@use 'sass:string'


$color-adjust: color.adjust(#6b717f, $red: 25)
$color-adjust-2: color.adjust(#6b717f, $red: 25, $blue: 40)


.color-1
   color: $color-adjust
   background-color: $color-adjust-2



@debug color.green($color-adjust)
@debug color.blue($color-adjust)


$color-scale: color.scale($color-adjust-2, $lightness: -40%) 

.color-2
   background-color: $color-scale

.color-5
   background-color: color.mix(#123114, #4f4f4f)

.color-6
   background-color: desaturate(#123114,  10%)

.color-7
   background-color: lighten(#4f1f33,  70%)

   &:hover
      background-color: lighten(#4f1f33,  60%)


//=====================================================


$lista: 10px, 20px, 30px

@debug $lista

$lista: list.append($lista, 40px)

@debug $lista

@debug list.index($lista, 20px)


@if list.index($lista, 10px) == 1
   $lista: list.append($lista, 50px)

@debug $lista

$lista2: 60px, 70px, 80px

$lista3: list.join($lista, $lista2)

@debug $lista3
@debug list.length($lista)

@debug list.nth($lista, 3)

//==========================================================

$m: ("font": 3px, "color": blue, "bold": false)
$n: ('border': 2px solid red, 'transition': 1s)

@debug $m
@debug $n

$x: map.merge($m, $n)

@debug $x

$border-title: map.get($x, 'border')
h1
   border: $border-title

@debug map.has-key($x, 'border')

//==================================================================


$pi: math.$pi

@debug $pi

$z: 3.5

@debug math.ceil($z)
@debug math.floor($z)

$a: 1, 2, 3, 4, 5

@debug math.max($a...) 
@debug math.min($a...) 

@debug math.floor(math.random() * 10 + 1)


//===================================================================

@debug meta.global-variable-exists('$color-adjust')

@debug meta.inspect($a)
@debug meta.inspect($pi)

@debug meta.mixin-exists('color.adjust')

@debug meta.type-of($a) 


//===================================================================


$f: "O rato roeu a roupa do rei de Roma"

@debug string.length($f)
@debug string.index($f, 'rato')

@debug  string.slice($f, 0, 5)
@debug  string.slice($f, 5, 10)

@debug string.to-upper-case($f)
@debug string.to-lower-case($f)

@debug string.unique-id()
@debug string.unique-id()

